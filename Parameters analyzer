// ParameterFlowInfo.java
package com.example.analyzer.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import java.util.ArrayList;
import java.util.List;

@JsonInclude(JsonInclude.Include.NON_NULL)
public class ParameterFlowInfo {
    public String parameterName; // The parameter from the *controller method* that was traced
    public String parameterOriginalType;
    public String flowOriginType; // e.g., "METHOD_PARAMETER", "LITERAL", "PROPERTY_VALUE"
    public String flowOriginDescription; // e.g., "inputParam", "value from application.properties", "'fixedValue'"
    public String flowOriginRawExpression; // The prettyprinted Spoon expression at its origin
    public List<String> transformations = new ArrayList<>(); // List of operations applied
    public List<MethodCallInfo> methodCalls = new ArrayList<>(); // Sequence of method calls in the flow

    // Constructor for primary entry point parameter
    public ParameterFlowInfo(String parameterName, String parameterOriginalType, String flowOriginType, String flowOriginDescription, String flowOriginRawExpression) {
        this.parameterName = parameterName;
        this.parameterOriginalType = parameterOriginalType;
        this.flowOriginType = flowOriginType;
        this.flowOriginDescription = flowOriginDescription;
        this.flowOriginRawExpression = flowOriginRawExpression;
    }

    public void addTransformation(String transformation) {
        this.transformations.add(transformation);
    }

    public void addMethodCall(MethodCallInfo call) {
        this.methodCalls.add(call);
    }
}
